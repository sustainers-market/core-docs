asyncapi: "2.0.0-rc1"
id: "core:sustainers:net"
info:
  title: Core | Sustainer's Market
  version: "1.0.0"
  description: |
    The Core service provides authentication, accounts, event sourcing, and payments functionality for the market. 

    There are 4 domains in this service 

    | Domain        | Summary       | Cool  |
    | ------------- |-------------| -----:|
    | `issuer`  &nbsp;  &nbsp;       | An `issuer` describes an entity that has roles, and therefore can acquire `auth-token`'s' to issue commands to any number of servers on the Sustainer's Market.  |    $1 |
    | `auth-token`  &nbsp;  &nbsp;   | An `auth-token` describes an entity that can be scoped to sign commands on an `issuer`'s behalf.'  | $1600 |
    | `account`       | An `account` describes an entity that make's sure any authenticated person can access all of their information on the Market.  |    $1 |
    | `challenge`     | A `challenge` describes an entity that can grant special permissions to a service.     |    $1 |

    * auth-token
    # Check out its awesome features:
    ## Check out its awesome features:
    ### Check out its awesome features:
    ### Check out its awesome features:

    * Turn a _specific_ *streetlight* `on/off` ðŸŒƒ
    * Dim a specific streetlight ðŸ˜Ž
    * Receive real-time information about environmental lighting conditions ðŸ“ˆ
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: core.sustainers.market
    protocol: https
    description: Production server
    security:
      - apiKey: []
      - supportedOauthFlows:
          - streetlights:on
          - streetlights:off
          - streetlights:dim

defaultContentType: application/json

tags:
  - name: auth-token
  - name: account

channels:
  create.auth-token:
    subscribe:
      operationId: create.auth-token
      summary: Create auth token.
      description: The tossspic on which measured values may be produced and consumed.
      tags:
        - name: auth-token
      message:
        $ref: "#/components/messages/lightMeasured"

  edit.auth-token:
    publish:
      operationId: edit.auth-token
      summary: yes
      tags:
        - name: account
      message:
        $ref: "#/components/messages/turnOnOff"

  some-other.auth-token:
    publish:
      operationId: some-other.auth-token
      summary: yes
      tags:
        - name: account
      message:
        $ref: "#/components/messages/turnOnOff"

  eat.auth-token:
    publish:
      summary: yes
      operationId: eat.auth-token
      tags:
        - name: account
      message:
        $ref: "#/components/messages/dimLight"

components:
  messages:
    lightMeasured:
      name: lightMeasured
      title: Light measured
      summary: Inform about environmental lighting conditions for a particular streetlight.
      contentType: application/json
      traits:
        - - $ref: "#/components/traits/docs"
          - headerId: "message-light-measured"
      payload:
        $ref: "#/components/schemas/lightMeasuredPayload"
    turnOnOff:
      name: turnOnOff
      title: Turn on/off
      summary: Command a particular streetlight to turn the lights on or off.
      traits:
        - - $ref: "#/components/traits/docs"
          - headerId: "message-turn-on-off"
      payload:
        $ref: "#/components/schemas/turnOnOffPayload"
    dimLight:
      name: dimLight
      title: Dim light
      summary: Command a particular streetlight to dim the lights.
      traits:
        - - $ref: "#/components/traits/docs"
          - headerId: "message-dim-light"
      payload:
        $ref: "#/components/schemas/dimLightPayload"

  schemas:
    lightMeasuredPayload:
      type: object
      properties:
        lumens:
          type: integer
          minimum: 0
          description: Light intensity measured in lumens.
        sentAt:
          $ref: "#/components/schemas/sentAt"
    turnOnOffPayload:
      type: object
      properties:
        command:
          type: string
          enum:
            - on
            - off
          description: Whether to turn on or off the light.
        sentAt:
          $ref: "#/components/schemas/sentAt"
    dimLightPayload:
      type: object
      properties:
        percentage:
          type: integer
          description: Percentage to which the light should be dimmed to.
          minimum: 0
          maximum: 100
        sentAt:
          $ref: "#/components/schemas/sentAt"
    sentAt:
      type: string
      format: date-time
      description: Date and time when the message was sent.

  securitySchemes:
    apiKey:
      type: apiKey
      in: password
      description: Provide your API key as the password field of the request's [Basic Authorization](https://en.wikipedia.org/wiki/Basic_access_authentication) header.
    supportedOauthFlows:
      type: oauth2
      description: Flows to support OAuth 2.0
      flows:
        clientCredentials:
          tokenUrl: "https://authserver.example/token"
          scopes:
            "streetlights:on": Ability to switch lights on
            "streetlights:off": Ability to switch lights off
            "streetlights:dim": Ability to dim the lights
        authorizationCode:
          authorizationUrl: "https://authserver.example/auth"
          tokenUrl: "https://authserver.example/token"
          refreshUrl: "https://authserver.example/refresh"
          scopes:
            "streetlights:on": Ability to switch lights on
            "streetlights:off": Ability to switch lights off
            "streetlights:dim": Ability to dim the lights

  parameters:
    streetlightId:
      name: streetlightId
      description: The ID of the streetlight.
      schema:
        type: string

  traits:
    docs:
      externalDocs:
        url: https://company.com/docs#
